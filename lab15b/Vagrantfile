# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

BOX_IMAGE = "bento/ubuntu-16.04"
VBVM_MEMORY = 384
LAB = "lab15b"
VBVM_NAME01 = LAB+"vm1"
VBVM_NAME02 = LAB+"vm2"
VBVM_NAME03 = LAB+"vm3"
VBVM_NAME04 = LAB+"vm4"
VBVM_NAME05 = LAB+"vm5"
VBVM_NAME06 = LAB+"vm6"
VM_HOSTNAME01 = "vm1"
VM_HOSTNAME02 = "vm2"
VM_HOSTNAME03 = "vm3"
VM_HOSTNAME04 = "vm4"
VM_HOSTNAME05 = "vm5"
VM_HOSTNAME06 = "vm6"
IPIF1_HOST1 = "192.168.10.2"
IPIF1_HOST2 = "192.168.10.1"
IPIF2_HOST2 = "192.168.20.1"
IPIF1_HOST3 = "192.168.20.2"
IPIF_DEFAULT_GW = "10.0.2.2"
XARXA1 = "lan1"
XARXA2 = "lan2"

Vagrant.configure("2") do |config|
## fem que no s'engege fins que preparem el servidor (vm2)
  config.vm.define VM_HOSTNAME01, autostart: false do |subconfig|
    subconfig.vm.provider "virtualbox" do |vb|
## tractar d'evitar IOERROR
## ??       vb.customize ["modifyvm", :id, "--rtcuseutc", "on"]

       vb.name = VBVM_NAME01 
       vb.memory = VBVM_MEMORY
       vb.linked_clone = true
    end

    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.hostname = VM_HOSTNAME01 
    subconfig.vm.network :private_network, ip: IPIF1_HOST1, virtualbox__intnet: XARXA1, auto_config: true
    subconfig.vm.provision :shell, path: "bootstrap-vm1.sh"
    
#  accions a realitzar sobre la màquina vm1 
##  -- no per lab13
##    subconfig.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
##    subconfig.vm.provision "shell", inline: <<-SHELL
##     sudo route add -net 192.168.20.0/24 enp0s8
##    SHELL

  end

  config.vm.define VM_HOSTNAME02, autostart: true do |subconfig|
    subconfig.vm.provider "virtualbox" do |vb|
## tractar d'evitar IOERROR
##       vb.customize ["modifyvm", :id, "--rtcuseutc", "on"]

       vb.name = VBVM_NAME02 
       vb.memory = VBVM_MEMORY
       vb.linked_clone = true
    end
    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.hostname = VM_HOSTNAME02 
    subconfig.vm.network :private_network, ip: IPIF1_HOST2, virtualbox__intnet: XARXA1
    subconfig.vm.network :private_network, ip: IPIF2_HOST2, virtualbox__intnet: XARXA2
    
    subconfig.vm.provision :shell, path: "bootstrap-vm2.sh"
#  accions a realitzar sobre la màquina vm2
#  config.vm.provision "shell", inline: <<-SHELL2
#      sudo sysctl -w net.ipv4.ip_forward=1 
#      sudo route del default gw #{IPIF_DEFAULT_GW}
#  SHELL2
##    subconfig.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
##    subconfig.vm.provision "shell", inline: <<-SHELL2
##      sudo sysctl -w net.ipv4.ip_forward=1 
##      sudo sysctl -w net.ipv4.conf.all.proxy_arp=1 
##  SHELL2
  end

## fem que no s'engege fins que preparem el servidor (vm2)
  config.vm.define VM_HOSTNAME03,  autostart: false do |subconfig|
##  config.vm.define VM_HOSTNAME03, autostart: true do |subconfig|
    subconfig.vm.provider "virtualbox" do |vb|
## tractar d'evitar IOERROR
##       vb.customize ["modifyvm", :id, "--rtcuseutc", "on"]

       vb.name = VBVM_NAME03 
       vb.memory = VBVM_MEMORY
       vb.linked_clone = true
    end
    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.hostname = VM_HOSTNAME03 
    subconfig.vm.network :private_network, type: "dhcp", virtualbox__intnet: XARXA2, auto_config: true
    
#  accions a realitzar sobre la màquina vm3
#  config.vm.provision "shell", inline: <<-SHELL3
#     sudo route add default gw #{IPIF2_HOST2}
#     sudo route del default gw #{IPIF_DEFAULT_GW}
#     ping -c 4 #{IPIF1_HOST1}
#  SHELL3
##  subconfig.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
##  subconfig.vm.provision "shell", inline: <<-SHELL3
##     sudo route add -net 192.168.10.0/24 enp0s8
##   SHELL3
#  config.vm.provision.args = IPIF2_HOST2
  end


# Install avahi on all machines     
##  config.vm.provision "shell", inline: <<-SHELL
##     apt-get install -y avahi-daemon libnss-mdns   
##  SHELL

end
